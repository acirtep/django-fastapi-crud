# Generated by Django 5.0.4 on 2024-06-05 19:48

import django.contrib.postgres.functions
import django.db.models.deletion
import django.db.models.functions.datetime
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("writers", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "article_id",
                    models.UUIDField(
                        db_comment="unique identifier of the article",
                        db_default=django.contrib.postgres.functions.RandomUUID(),
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("article_name", models.CharField(db_comment="the content of the article")),
                ("article_content", models.TextField(db_comment="the content of the article", null=True)),
                (
                    "date_created",
                    models.DateTimeField(
                        db_comment="the date time in UTC, when the article was created",
                        db_default=django.db.models.functions.datetime.Now(),
                    ),
                ),
                (
                    "date_updated",
                    models.DateTimeField(db_comment="the date time in UTC, when the article was update", null=True),
                ),
                (
                    "date_first_published",
                    models.DateTimeField(
                        db_comment="the date time in UTC, when the article was published the first time", null=True
                    ),
                ),
                (
                    "article_status",
                    models.CharField(
                        choices=[("DRAFT", "Draft"), ("PUBLISHED", "Published")],
                        db_comment="the status of the article",
                        db_default="DRAFT",
                    ),
                ),
                (
                    "members_only_flag",
                    models.BooleanField(db_comment="true if it is a members only article", db_default=False),
                ),
                (
                    "writer",
                    models.ForeignKey(
                        db_comment="the writer of the article",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="articles",
                        to="writers.writer",
                    ),
                ),
            ],
            options={
                "db_table": "django_article",
                "db_table_comment": "general information about articles",
            },
        ),
    ]
